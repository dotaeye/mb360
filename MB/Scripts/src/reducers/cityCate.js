// <autogenerated>
//   This file was generated by T4 code generator Entry.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>



import * as cityCateTypes from '../contants/cityCate';

const initialState = {
    loaded: false,
    entity: {},
    cascader:[]
};

export default function cityCate(state = initialState, action = {}) {
    switch (action.type) {
        case cityCateTypes.GET_ALL_CITYCATE:
        case cityCateTypes.GET_ONE_CITYCATE:
        case cityCateTypes.CREATE_CITYCATE:
        case cityCateTypes.UPDATE_CITYCATE:
        case cityCateTypes.DELETE_CITYCATE:
            return {
              ...state,
                loading: true
            };
        case cityCateTypes.GET_ALL_CITYCATE_FAIL:
        case cityCateTypes.GET_ONE_CITYCATE_FAIL:
        case cityCateTypes.CREATE_CITYCATE_FAIL:
        case cityCateTypes.UPDATE_CITYCATE_FAIL:
        case cityCateTypes.DELETE_CITYCATE_FAIL:
            return {
              ...state,
                loading: false,
                error: action.error
            };
        case cityCateTypes.GET_ALL_CITYCATE_SUCCESS:
            return {
              ...state,
                loading: false,
                loaded: true,
                list: action.result
            };
        case cityCateTypes.GET_ONE_CITYCATE_SUCCESS:
            return {
              ...state,
                loading: false,
                entity: action.result
            };
        case cityCateTypes.GET_CITYCATE_CASCADER_SUCCESS:
            return {
              ...state,
                loading: false,
                cascader: action.result
            };
        case cityCateTypes.CREATE_CITYCATE_SUCCESS:
            return {
              ...state,
                loading: false,
                entity: action.result
            };
        case cityCateTypes.UPDATE_CITYCATE_SUCCESS:
            return {
              ...state,
                loading: false,
                entity: action.result
            };
        case cityCateTypes.DELETE_CITYCATE_SUCCESS:
            return {
              ...state,
                loading: false,
                entity: action.result
            };
        default:
            return state;
    }
}

