// <autogenerated>
//   This file was generated by T4 code generator Entry.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>



import * as carCateTypes from '../contants/carCate';

const initialState = {
  loaded: false,
  entity: {},
  cascader:[]
};

export default function carCate(state = initialState, action = {}) {
  switch (action.type) {
    case carCateTypes.GET_ALL_CARCATE:
    case carCateTypes.GET_ONE_CARCATE:
    case carCateTypes.CREATE_CARCATE:
    case carCateTypes.UPDATE_CARCATE:
    case carCateTypes.DELETE_CARCATE:
      return {
        ...state,
        loading: true
      };
    case carCateTypes.GET_ALL_CARCATE_FAIL:
    case carCateTypes.GET_ONE_CARCATE_FAIL:
    case carCateTypes.CREATE_CARCATE_FAIL:
    case carCateTypes.UPDATE_CARCATE_FAIL:
    case carCateTypes.DELETE_CARCATE_FAIL:
      return {
        ...state,
        loading: false,
        error: action.error
      };
    case carCateTypes.GET_ALL_CARCATE_SUCCESS:
      return {
        ...state,
        loading: false,
        loaded: true,
        list: action.result
      };
    case carCateTypes.GET_ONE_CARCATE_SUCCESS:
      return {
        ...state,
        loading: false,
        entity: action.result
      };
    case carCateTypes.GET_CARCATE_CASCADER_SUCCESS:
      return {
        ...state,
        loading: false,
        cascader: action.result
      };
    case carCateTypes.CREATE_CARCATE_SUCCESS:
      return {
        ...state,
        loading: false,
        entity: action.result
      };
    case carCateTypes.UPDATE_CARCATE_SUCCESS:
      return {
        ...state,
        loading: false,
        entity: action.result
      };
    case carCateTypes.DELETE_CARCATE_SUCCESS:
      return {
        ...state,
        loading: false,
        entity: action.result
      };
    default:
      return state;
  }
}

