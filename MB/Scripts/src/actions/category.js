// <autogenerated>
//   This file was generated by T4 code generator Entry.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


import * as categoryTypes from '../contants/category';

export function getAll(params) {
  return {
    types: [categoryTypes.GET_ALL_CATEGORY, categoryTypes.GET_ALL_CATEGORY_SUCCESS, categoryTypes.GET_ALL_CATEGORY_FAIL],
    promise: (client) => client.get('/category',{
      token: true,
      params
    })
  };
}

export function getCascader(params) {
  return {
    types: [categoryTypes.GET_CATEGORY_CASCADER, categoryTypes.GET_CATEGORY_CASCADER_SUCCESS, categoryTypes.GET_CATEGORY_CASCADER_FAIL],
    promise: (client) => client.get('/category/cascader', {
      token: true,
      params
    })
  };
}

export function getById(id) {
  return {
    types: [categoryTypes.GET_ONE_CATEGORY, categoryTypes.GET_ONE_CATEGORY_SUCCESS, categoryTypes.GET_ONE_CATEGORY_FAIL],
    promise: (client) => client.get('/category/'+id,{
      token: true
    })
  };
}

export function create(data) {
  return {
    types: [categoryTypes.CREATE_CATEGORY, categoryTypes.CREATE_CATEGORY_SUCCESS, categoryTypes.CREATE_CATEGORY_FAIL],
    promise: (client) => client.post('/category', {
      data: data,
	    token: true
    })
  };
}

export function update(data) {
  return {
    types: [categoryTypes.UPDATE_CATEGORY, categoryTypes.UPDATE_CATEGORY_SUCCESS, categoryTypes.UPDATE_CATEGORY_FAIL],
    promise: (client) => client.put('/category', {
      data: data,
	    token: true
    })
  };
}

export function remove(id) {
  return {
    types: [categoryTypes.DELETE_CATEGORY, categoryTypes.DELETE_CATEGORY_SUCCESS, categoryTypes.DELETE_CATEGORY_FAIL],
    promise: (client) => client.del('/category/'+id, {
		token: true
    })
  };
}


