// <autogenerated>
//   This file was generated by T4 code generator Entry.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


import * as manufacturerTypes from '../contants/manufacturer';

export function getAll(params) {
  return {
    types: [manufacturerTypes.GET_ALL_MANUFACTURER, manufacturerTypes.GET_ALL_MANUFACTURER_SUCCESS, manufacturerTypes.GET_ALL_MANUFACTURER_FAIL],
    promise: (client) => client.get('/manufacturer',{
      token: true,
      params
    })
  };
}

export function getById(id) {
  return {
    types: [manufacturerTypes.GET_ONE_MANUFACTURER, manufacturerTypes.GET_ONE_MANUFACTURER_SUCCESS, manufacturerTypes.GET_ONE_MANUFACTURER_FAIL],
    promise: (client) => client.get('/manufacturer/'+id,{
      token: true
    })
  };
}

export function getSelectList() {
  return {
    types: [manufacturerTypes.GET_MANUFACTURER_SELECTLIST, manufacturerTypes.GET_MANUFACTURER_SELECTLIST_SUCCESS, manufacturerTypes.GET_MANUFACTURER_SELECTLIST_FAIL],
    promise: (client) => client.get('/manufacturer/selectlist',{
      token: true
    })
  };
}

export function create(data) {
  return {
    types: [manufacturerTypes.CREATE_MANUFACTURER, manufacturerTypes.CREATE_MANUFACTURER_SUCCESS, manufacturerTypes.CREATE_MANUFACTURER_FAIL],
    promise: (client) => client.post('/manufacturer', {
      data: data,
	    token: true
    })
  };
}

export function update(data) {
  return {
    types: [manufacturerTypes.UPDATE_MANUFACTURER, manufacturerTypes.UPDATE_MANUFACTURER_SUCCESS, manufacturerTypes.UPDATE_MANUFACTURER_FAIL],
    promise: (client) => client.put('/manufacturer', {
      data: data,
	    token: true
    })
  };
}

export function remove(id) {
  return {
    types: [manufacturerTypes.DELETE_MANUFACTURER, manufacturerTypes.DELETE_MANUFACTURER_SUCCESS, manufacturerTypes.DELETE_MANUFACTURER_FAIL],
    promise: (client) => client.del('/manufacturer/'+id, {
		token: true
    })
  };
}


