// <autogenerated>
//   This file was generated by T4 code generator Entry.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


import * as userPermissionTypes from '../contants/userPermission';

export function getAll(params) {
  return {
    types: [userPermissionTypes.GET_ALL_USERPERMISSION, userPermissionTypes.GET_ALL_USERPERMISSION_SUCCESS, userPermissionTypes.GET_ALL_USERPERMISSION_FAIL],
    promise: (client) => client.get('/userPermission',{
      token: true,
      params
    })
  };
}

export function getById(id) {
  return {
    types: [userPermissionTypes.GET_ONE_USERPERMISSION, userPermissionTypes.GET_ONE_USERPERMISSION_SUCCESS, userPermissionTypes.GET_ONE_USERPERMISSION_FAIL],
    promise: (client) => client.get('/userPermission/'+id,{
      token: true
    })
  };
}

export function create(data) {
  return {
    types: [userPermissionTypes.CREATE_USERPERMISSION, userPermissionTypes.CREATE_USERPERMISSION_SUCCESS, userPermissionTypes.CREATE_USERPERMISSION_FAIL],
    promise: (client) => client.post('/userPermission', {
      data: data,
	    token: true
    })
  };
}

export function update(data) {
  return {
    types: [userPermissionTypes.UPDATE_USERPERMISSION, userPermissionTypes.UPDATE_USERPERMISSION_SUCCESS, userPermissionTypes.UPDATE_USERPERMISSION_FAIL],
    promise: (client) => client.put('/userPermission', {
      data: data,
	    token: true
    })
  };
}

export function remove(id) {
  return {
    types: [userPermissionTypes.DELETE_USERPERMISSION, userPermissionTypes.DELETE_USERPERMISSION_SUCCESS, userPermissionTypes.DELETE_USERPERMISSION_FAIL],
    promise: (client) => client.del('/userPermission/'+id, {
		token: true
    })
  };
}

