// <autogenerated>
//   This file was generated by T4 code generator Entry.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


import * as productAttributeMappingTypes from '../contants/productAttributeMapping';

export function getAll(params) {
  return {
    types: [productAttributeMappingTypes.GET_ALL_PRODUCTATTRIBUTEMAPPING, productAttributeMappingTypes.GET_ALL_PRODUCTATTRIBUTEMAPPING_SUCCESS, productAttributeMappingTypes.GET_ALL_PRODUCTATTRIBUTEMAPPING_FAIL],
    promise: (client) => client.get('/productAttributeMapping',{
      token: true,
      params
    })
  };
}

export function getById(id) {
  return {
    types: [productAttributeMappingTypes.GET_ONE_PRODUCTATTRIBUTEMAPPING, productAttributeMappingTypes.GET_ONE_PRODUCTATTRIBUTEMAPPING_SUCCESS, productAttributeMappingTypes.GET_ONE_PRODUCTATTRIBUTEMAPPING_FAIL],
    promise: (client) => client.get('/productAttributeMapping/'+id,{
      token: true
    })
  };
}

export function create(data) {
  return {
    types: [productAttributeMappingTypes.CREATE_PRODUCTATTRIBUTEMAPPING, productAttributeMappingTypes.CREATE_PRODUCTATTRIBUTEMAPPING_SUCCESS, productAttributeMappingTypes.CREATE_PRODUCTATTRIBUTEMAPPING_FAIL],
    promise: (client) => client.post('/productAttributeMapping', {
      data: data,
	    token: true
    })
  };
}

export function update(data) {
  return {
    types: [productAttributeMappingTypes.UPDATE_PRODUCTATTRIBUTEMAPPING, productAttributeMappingTypes.UPDATE_PRODUCTATTRIBUTEMAPPING_SUCCESS, productAttributeMappingTypes.UPDATE_PRODUCTATTRIBUTEMAPPING_FAIL],
    promise: (client) => client.put('/productAttributeMapping', {
      data: data,
	    token: true
    })
  };
}

export function remove(id) {
  return {
    types: [productAttributeMappingTypes.DELETE_PRODUCTATTRIBUTEMAPPING, productAttributeMappingTypes.DELETE_PRODUCTATTRIBUTEMAPPING_SUCCESS, productAttributeMappingTypes.DELETE_PRODUCTATTRIBUTEMAPPING_FAIL],
    promise: (client) => client.del('/productAttributeMapping/'+id, {
		token: true
    })
  };
}


