// <autogenerated>
//   This file was generated by T4 code generator Entry.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


import * as cityCateTypes from '../contants/cityCate';

export function getAll(params) {
    return {
        types: [cityCateTypes.GET_ALL_CITYCATE, cityCateTypes.GET_ALL_CITYCATE_SUCCESS, cityCateTypes.GET_ALL_CITYCATE_FAIL],
        promise: (client) => client.get('/cityCate',{
            token: true,
            params
        })
    };
}

export function getCascader(params) {
    return {
        types: [cityCateTypes.GET_CITYCATE_CASCADER, cityCateTypes.GET_CITYCATE_CASCADER_SUCCESS, cityCateTypes.GET_CITYCATE_CASCADER_FAIL],
        promise: (client) => client.get('/citycate/cascader', {
            token: true,
            params
        })
    };
}

export function getById(id) {
    return {
        types: [cityCateTypes.GET_ONE_CITYCATE, cityCateTypes.GET_ONE_CITYCATE_SUCCESS, cityCateTypes.GET_ONE_CITYCATE_FAIL],
        promise: (client) => client.get('/cityCate/'+id,{
            token: true
        })
    };
}

export function create(data) {
    return {
        types: [cityCateTypes.CREATE_CITYCATE, cityCateTypes.CREATE_CITYCATE_SUCCESS, cityCateTypes.CREATE_CITYCATE_FAIL],
        promise: (client) => client.post('/cityCate', {
            data: data,
            token: true
        })
    };
}

export function update(data) {
    return {
        types: [cityCateTypes.UPDATE_CITYCATE, cityCateTypes.UPDATE_CITYCATE_SUCCESS, cityCateTypes.UPDATE_CITYCATE_FAIL],
        promise: (client) => client.put('/cityCate', {
            data: data,
            token: true
        })
    };
}

export function remove(id) {
    return {
        types: [cityCateTypes.DELETE_CITYCATE, cityCateTypes.DELETE_CITYCATE_SUCCESS, cityCateTypes.DELETE_CITYCATE_FAIL],
        promise: (client) => client.del('/cityCate/'+id, {
            token: true
        })
    };
}


